Lab 1
David Turner edited this page on Sep 22 Â· 8 revisions

Background

When keyboards and monitors were first used in the early days of computers,
all interaction with the computer was done by typing in characters and reading text displayed on the screen.
There were no mice and no graphics other than characters were displayed in the screen.
You can still interact with computers in this way; it is done using a program called a console or a terminal window.
It turns out that this old style interface is very useful and frequently used to this day by programmers and system administrators.
This is especially true for Linux systems, which are the predominate operating system for distributed computing resources on the Internet.
For this reason, in this course we will learn how to use the command line interface.





Preparation (10 points)

You will do your assignments using a Cloud9 workspace.
Your instructor will use your email to send you an invitation to join the csusb team on Cloud9.
The email will have the word support in the subject line. When you receive this email, follow the link to create a free Cloud9 account.
Then do the following.

Create a new workspace outside of the csusb team with these options:
Select the team to "Don't set a team for this workspace."
Workspace name: cse201 (other name is OK)
Template: Blank
Access: Private
Open the new workspace you created.
Click Share in the top right corner.
Under the Invite People box, invite csusbdt with RW access. Ask your TA for their Cloud 9 id and invite them.





Learn the Command Line Interface (20 points)

For this assignment, you should complete the interactive Codecademy command line tutorial.
You will need to create a free account with Codecademy for this purpose.
The tutorial covers topics that will not appear on quizzes or exams;
see the description above and the list of example quiz questions to understand what type of problems
you are expected to solve from memory in this course.

command completion

One helpful feature of the terminal window is called command completion.
If you press tab in the command line, the system will try to complete what you are typing by looking for a matching filename.

command history

Another helpful feature is called command history.
This feature allows you to access a record of commands that you previously entered.
Use the up and down arrow keys to scroll through the command history.
Press enter at any previously entered command to run it again.





Experience Working with C++ (10 points)

This section explains how to write, compile and run a simple C++ console program in your remote Cloud9 workspace.
The program is called a hello program because when it runs, it prints hello.

Create a file named hello.cpp in your Cloud9 workspace and fill it with the following contents.

#include <iostream>

using namespace std;

int main(int argc, char * args[]) {
    cout << "hello\n";
    return 0;
}

From a Cloud9 terminal window, run the following command to compile hello.cpp.

c++ hello.cpp

The above command generates an executable file named a.out. To run this file, issue the following from the command line.

./a.out

Modify the source code in hello.cpp so that it displays a greeting to you, such as Hello, David.

Test that your changes produce an executable file that runs as expected.





#include <iostream>

using namespace std;

int main(int argc, char * args[]) {
    cout << "Hello, Eugene\n";
    return 0;
}




